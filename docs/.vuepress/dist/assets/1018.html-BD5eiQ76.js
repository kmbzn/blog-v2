import{_ as s,c as a,a as p,o as e}from"./app-CXa5lrE-.js";const t={};function o(c,n){return e(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="_1018번-체스판-다시-칠하기" tabindex="-1"><a class="header-anchor" href="#_1018번-체스판-다시-칠하기"><span>1018번: 체스판 다시 칠하기</span></a></h1><p><a href="https://www.acmicpc.net/problem/1018" target="_blank" rel="noopener noreferrer">https://www.acmicpc.net/problem/1018</a></p><p>난이도: <strong>실버 IV</strong></p><p>해당 문제는 <strong>Python 3</strong>으로 풀이하였습니다.</p><p>우선 문제에서 입력으로 주어지는 <code>N</code>, <code>M</code>값을 각각 받아옵니다.</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">N<span class="token punctuation">,</span> M <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>그 뒤에 입력으로 주어지는 체스판 행렬을 받아옵니다. 이 때 계산의 편의를 위해 <code>B</code>는 <code>1</code>, <code>W</code>는 <code>0</code>이라는 정수 값으로 <code>list</code>에 저장하겠습니다.</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    row <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> M<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> row<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span></span>
<span class="line">            row<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            row<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>실제 문제에서는 <code>8x8</code>보다 큰 size의 보드가 주어지겠지만, 결국 정사각형을 칠하는 행위는 <code>8x8</code> 사이즈로 자른 후에 이루어질 것이므로 우선 <code>8x8</code> 사이즈의 단위 예시를 가지고 문제를 풀어봅니다.</p><p>문제에서 언급하였듯이,</p><blockquote><p>체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다.<br> 구체적으로, 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고,<br> 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다.</p></blockquote><p>따라서 이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐이다.<br> 하지만 사실 어떤 경우를 두고 생각하더라도 이것이 크게 중요한 문제는 아닐 것입니다.</p><hr><h2 id="idea-1" tabindex="-1"><a class="header-anchor" href="#idea-1"><span>Idea 1.</span></a></h2><p>체스판이기 때문에, 두 가지 <code>case</code>에 대해 모두 계산할 필요 없이, 한 가지의 <code>case</code>에 대해 &quot;다시 칠해야 하는 정사각형의 수&quot;를 계산한 후, <code>64 (8 x 8)</code>에서 그 값을 빼 준다면 다른 한 가지 <code>case</code>에 대해서 계산한 값이 됩니다.<br> 따라서, 이 두 값 중에 더 작은 값을 택하기만 하면 됩니다.</p><p>이 단위 예시에 대해 풀이하는 함수를 정의합니다.</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    r <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            r <span class="token operator">+=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row <span class="token operator">+</span> col<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">-</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> row<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> col<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> r <span class="token operator">&lt;</span> res<span class="token punctuation">:</span></span>
<span class="line">        res <span class="token operator">=</span> r</span>
<span class="line">    <span class="token keyword">if</span> <span class="token number">64</span> <span class="token operator">-</span> r <span class="token operator">&lt;</span> res<span class="token punctuation">:</span></span>
<span class="line">        res <span class="token operator">=</span> <span class="token number">64</span> <span class="token operator">-</span> r</span>
<span class="line">    <span class="token keyword">return</span> res</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="idea-2" tabindex="-1"><a class="header-anchor" href="#idea-2"><span>Idea 2.</span></a></h2><p><code>(row + col) % 2</code>는 완전한 체스판 중에서 첫 번째 칸에 검정색이 칠해진 체스판의 <code>(row, col)</code> 위치에 칠해져야 할 값이고,<br><code>arr[i + row][j + col]</code>은 단위 체스판에서 <code>(row, col)</code> 위치에 칠해진 값입니다.<br> 이 두 값의 차를 모두 더한 값이 해당 단위 체스판에서 지민이가 다시 칠해야 하는 정사각형의 개수가 될 것입니다.</p><p>또한 Idea 1에서 언급하였듯이, <code>r</code>값이 <code>32</code>보다 크다면, <code>64</code>에서 <code>r</code>값을 빼 주기만 하면 됩니다.<br> 앞에서 언급하였듯이, <code>r</code>과 <code>(64 - r)</code> 중에서 더 작은 값을 택하기만 하면 되기 때문입니다.</p><p>이 함수를 모든 가능한 단위 체스판에 대해서 수행한 뒤, 최솟값을 최종적으로 출력하면 됩니다.<br> 함수의 수행 횟수는 <code>(N - 7) x (M - 7)</code>회가 될 것입니다.</p><hr><h2 id="완성된-code" tabindex="-1"><a class="header-anchor" href="#완성된-code"><span>완성된 code</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line">N<span class="token punctuation">,</span> M <span class="token operator">=</span> <span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">res <span class="token operator">=</span> <span class="token number">64</span></span>
<span class="line">arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    r <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">            r <span class="token operator">+=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row <span class="token operator">+</span> col<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">-</span> arr<span class="token punctuation">[</span>i <span class="token operator">+</span> row<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">+</span> col<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">if</span> r <span class="token operator">&lt;</span> res<span class="token punctuation">:</span></span>
<span class="line">        res <span class="token operator">=</span> r</span>
<span class="line">    <span class="token keyword">if</span> <span class="token number">64</span> <span class="token operator">-</span> r <span class="token operator">&lt;</span> res<span class="token punctuation">:</span></span>
<span class="line">        res <span class="token operator">=</span> <span class="token number">64</span> <span class="token operator">-</span> r</span>
<span class="line">    <span class="token keyword">return</span> res</span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    row <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> M<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">if</span> row<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">:</span></span>
<span class="line">            row<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">else</span><span class="token punctuation">:</span></span>
<span class="line">            row<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    arr<span class="token punctuation">.</span>append<span class="token punctuation">(</span>row<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> N <span class="token operator">-</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> M <span class="token operator">-</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        res <span class="token operator">=</span> check<span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> res<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,25)])])}const i=s(t,[["render",o]]),u=JSON.parse('{"path":"/algorithm/1018.html","title":"1018번: 체스판 다시 칠하기","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1748038506000,"contributors":[{"name":"김병준","username":"","email":"kmbzn24@hanyang.ac.kr","commits":3}],"changelog":[{"hash":"6e65cd5788647e99d415b967c0905c06df214d34","time":1748038506000,"email":"kmbzn24@hanyang.ac.kr","author":"김병준","message":"update music"},{"hash":"9461eff95217532807b27aee343d788c87a82af8","time":1747871687000,"email":"kmbzn24@hanyang.ac.kr","author":"김병준","message":"add operating-system"},{"hash":"87f0d0bd32e8678b0039d5a077d5d83d64258122","time":1747671338000,"email":"kmbzn24@hanyang.ac.kr","author":"김병준","message":"update files"}]},"filePathRelative":"algorithm/1018.md"}');export{i as comp,u as data};
