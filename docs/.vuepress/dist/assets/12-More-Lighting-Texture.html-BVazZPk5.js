import{_ as n,c as a,a as p,o as e}from"./app-CXa5lrE-.js";const l={};function t(i,s){return e(),a("div",null,[...s[0]||(s[0]=[p(`<h1 id="_12-more-lighting-texture" tabindex="-1"><a class="header-anchor" href="#_12-more-lighting-texture"><span>12 - More Lighting, Texture</span></a></h1><h2 id="revised-class-schedule" tabindex="-1"><a class="header-anchor" href="#revised-class-schedule"><span>Revised Class Schedule</span></a></h2><ul><li>이전에 공유된 강의 일정 및 기말 시험 범위에 오류가 있었습니다.</li><li>자세한 내용은 LMS 게시글 참조:<br> https://learning.hanyang.ac.kr/courses/178704/discussion_topics/418144</li><li>수정된 일정: <ul><li>Lecture 12: 6월 5일</li><li>Lecture 13 (마지막 수업): 6월 12일 (Lab 없음)</li></ul></li></ul><h2 id="final-exam-announcement" tabindex="-1"><a class="header-anchor" href="#final-exam-announcement"><span>Final Exam Announcement</span></a></h2><ul><li><p>일시: 6월 18일 (수), 오후 6:30–7:30</p></li><li><p>장소: IT/BT Room 911</p></li><li><p>범위: Lecture 8–12, Lab 8–12</p></li><li><p>시험 시작 후 30분 전에는 퇴실할 수 없습니다. (시험을 일찍 끝내더라도)</p></li><li><p>즉, 시험 시작 후 30분 이후에는 입장할 수 없습니다. (지각 절대 금지!)</p></li><li><p>학생증을 반드시 지참할 것</p></li></ul><h2 id="outline" tabindex="-1"><a class="header-anchor" href="#outline"><span>Outline</span></a></h2><ul><li><p>More Lighting</p><ul><li>BRDF</li><li>Local &amp; Global Illumination</li></ul></li><li><p>Texture Mapping</p><ul><li>개념</li><li>UV Mapping</li><li>Texture Mapping 과정</li><li>Texture 좌표 함수 정의</li><li>Texture가 적용된 객체 렌더링</li><li>Diffuse, Specular, Normal Map</li><li>Texture Map의 다양한 활용</li></ul></li></ul><h1 id="more-lighting" tabindex="-1"><a class="header-anchor" href="#more-lighting"><span>More Lighting</span></a></h1><h2 id="recall-reflection-of-general-materials" tabindex="-1"><a class="header-anchor" href="#recall-reflection-of-general-materials"><span>Recall: Reflection of General Materials</span></a></h2><ul><li>많은 재질의 표면은 diffuse reflection과 specular reflection을 모두 가짐</li><li>표면의 반사 특성은 분포 함수(distribution function)로 표현 가능</li><li>→ BRDF</li></ul><h2 id="bidirectional-reflectance-distribution-function-brdf" tabindex="-1"><a class="header-anchor" href="#bidirectional-reflectance-distribution-function-brdf"><span>Bidirectional Reflectance Distribution Function (BRDF)</span></a></h2><ul><li><p>불투명 표면에서 빛이 어떻게 반사되는지 정의</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ϕ</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_i, \\phi_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 입사광 방향</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>ϕ</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_o, \\phi_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 반사광 방향</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub></mrow><annotation encoding="application/x-tex">f_r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 출사 방향에 따른 반사 복사도 비율을 반환</li></ul></li><li><p>수식 표현:</p></li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>r</mi></msub><mo stretchy="false">(</mo><msub><mi>θ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>ϕ</mi><mi>i</mi></msub><mo separator="true">;</mo><msub><mi>θ</mi><mi>o</mi></msub><mo separator="true">,</mo><msub><mi>ϕ</mi><mi>o</mi></msub><mo stretchy="false">)</mo><mo>≥</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f_r(\\theta_i, \\phi_i; \\theta_o, \\phi_o) \\ge 0 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">ϕ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p><h2 id="examples-of-brdf" tabindex="-1"><a class="header-anchor" href="#examples-of-brdf"><span>Examples of BRDF</span></a></h2><p><em>(theoretical approximation, not from measurement)</em></p><ul><li>자동차 백미러의 강한 반사</li><li>분필 표면처럼 매우 diffuse한 재질</li><li>대리석 바닥과 같이 광택이 있는 표면</li><li>사과처럼 복합 반사를 가진 재질</li></ul><h2 id="phong-illumination-model-brdf" tabindex="-1"><a class="header-anchor" href="#phong-illumination-model-brdf"><span>Phong Illumination Model &amp; BRDF</span></a></h2><ul><li>Phong 모델은 다음 두 가지를 가진 BRDF를 모델링함: <ul><li>반구(hemisphere): diffuse 성분 표현</li><li>lobe(로브): specular 성분을 cosⁿ(α) 형태로 표현</li></ul></li></ul><h2 id="measuring-brdf" tabindex="-1"><a class="header-anchor" href="#measuring-brdf"><span>Measuring BRDF</span></a></h2><ul><li>특정 재질의 BRDF는 다음과 같은 장비로 측정 가능: <ul><li>기본 개념: 회전하는 광원과 회전하는 센서 사용</li></ul></li></ul><h2 id="using-measured-brdf-for-rendering" tabindex="-1"><a class="header-anchor" href="#using-measured-brdf-for-rendering"><span>Using Measured BRDF for Rendering</span></a></h2><ul><li>측정된 BRDF는 렌더링에 사용될 수 있음</li></ul><table><thead><tr><th>Measured BRDF</th><th>Nickel</th><th>Pink fabric</th><th>Gray plastic</th><th>Nylon</th></tr></thead><tbody><tr><td>Rendered object</td><td>렌더링된 오브젝트</td><td></td><td></td><td></td></tr><tr><td>Real object example</td><td>실제 물체 예시</td><td></td><td></td><td></td></tr></tbody></table><h2 id="local-vs-global-illumination" tabindex="-1"><a class="header-anchor" href="#local-vs-global-illumination"><span>Local vs. Global Illumination</span></a></h2><ul><li><strong>Local (또는 direct, non-global) illumination</strong><ul><li>광원에서 <strong>직접 오는 빛</strong>만을 모델링</li><li>빠르게 렌더링 가능하지만, 사실성이 떨어짐</li><li>예: Phong illumination 모델</li></ul></li></ul><p>(그림: Direct illumination 예시)</p><ul><li><strong>Global illumination</strong><ul><li>직접 조명 +</li><li>다른 물체에서 반사된 간접 조명 (inter-object reflections) 포함</li><li>훨씬 더 사실적</li><li>예: Ray tracing, Path tracing, Radiosity</li></ul></li></ul><p>(그림: 직접 조명 + 간접 조명 = 전역 조명)</p><h2 id="phong-illumination-model-local-global-illumination" tabindex="-1"><a class="header-anchor" href="#phong-illumination-model-local-global-illumination"><span>Phong Illumination Model &amp; Local, Global Illumination</span></a></h2><ul><li>Phong 조명 모델은 기본적으로 <strong>local illumination model</strong></li><li>간접 조명은 주변광(ambient component)으로만 <strong>대략적으로 근사됨</strong></li></ul><p>(그림: Phong direct vs. ambient 근사 비교)</p><h2 id="texture-mapping" tabindex="-1"><a class="header-anchor" href="#texture-mapping"><span>Texture Mapping</span></a></h2><ul><li><p><strong>표면상의 위치에 따라</strong> 표면 속성을 정의하는 기법</p></li><li><p>보통 2D texture 이미지(= texture map)를 3D 객체 표면에 적용</p></li><li><p>주요 목적: <strong>표면 디테일 추가</strong></p><ul><li>고폴리곤 모델보다</li><li>더 적은 폴리곤으로 높은 디테일 표현 가능</li><li>렌더링 속도 대폭 향상</li><li>texture map의 복잡도는 처리 복잡도에 영향 없음</li></ul></li></ul><p>(그림: 고정밀 vs. 텍스처 적용 모델)</p><h2 id="uv-mapping" tabindex="-1"><a class="header-anchor" href="#uv-mapping"><span>UV Mapping</span></a></h2><ul><li><p>Texture mapping은 보통 <strong>UV mapping</strong>을 통해 정의됨</p></li><li><p>UV mapping: 2D 텍스처 좌표 (u, v)를 3D 모델의 각 정점에 매핑</p><ul><li>각 정점이 2D 이미지에서 어떤 위치에 대응되는지 설명</li></ul></li><li><p>UV mapping 함수는 <strong>texture coordinate function</strong>으로도 불림</p></li></ul><p>(그림: UV 좌표 및 매핑 예시)</p><h2 id="texture-mapping-process" tabindex="-1"><a class="header-anchor" href="#texture-mapping-process"><span>Texture Mapping Process</span></a></h2><ol><li>표면의 점을 UV 공간(UV map)에서의 점에 매핑 (UV mapping)</li><li>해당 UV 좌표를 텍스처 상의 점으로 매핑</li></ol><ul><li>Step 2는 단순 스케일링이며 시스템이 자동 수행</li><li>Step 1이 바로 우리가 정의해야 할 <strong>texture coordinate function</strong></li></ul><p>(그림: 지구 표면 UV로 펴기)</p><h2 id="defining-texture-coordinate-function" tabindex="-1"><a class="header-anchor" href="#defining-texture-coordinate-function"><span>Defining Texture Coordinate Function:</span></a></h2><ol><li>Creating &quot;UV map&quot;</li></ol><ul><li>물체 표면을 &quot;펼치기(Unwrap)&quot; <ul><li>Blender 등 3D 모델링 툴에서 자동 수행됨</li></ul></li><li>필요 시, 아티스트가 수작업으로 UV 좌표를 추가 보정하기도 함</li></ul><h2 id="unwrapping" tabindex="-1"><a class="header-anchor" href="#unwrapping"><span>&quot;Unwrapping&quot;</span></a></h2><ul><li>자동 &quot;unwrapping&quot; 알고리즘 <ul><li>일부 최적화 알고리즘은 3D 객체를 펼칠 때 각 정점의 (u, v)를 부드럽고 왜곡이 적은 방식으로 선택</li><li>Blender, Maya 등 다양한 3D 모델링 툴은 각기 다른 unwrapping 알고리즘을 사용</li></ul></li></ul><p>(그림: 다양한 unwrap 예시)</p><h2 id="uv-map-examples" tabindex="-1"><a class="header-anchor" href="#uv-map-examples"><span>UV Map Examples</span></a></h2><p>(그림: 나무 상자 및 버섯 모델의 UV 매핑 예시)</p><p>(그림: 캐릭터, 자동차 등 다양한 UV 매핑 예시)</p><h2 id="defining-texture-coordinate-function-1" tabindex="-1"><a class="header-anchor" href="#defining-texture-coordinate-function-1"><span>Defining Texture Coordinate Function:</span></a></h2><ol start="2"><li>Projections to Parametric Surfaces</li></ol><ul><li>사각형, 구, 원기둥 등 파라메트릭 표면(parametric surfaces)과 유사한 객체는</li><li>해당 파라메트릭 표면에 정점을 투사하여 텍스처 좌표 함수를 정의할 수 있음</li></ul><h2 id="examples-of-coordinate-functions" tabindex="-1"><a class="header-anchor" href="#examples-of-coordinate-functions"><span>Examples of coordinate functions</span></a></h2><p>Planar projection</p><p>(그림: 평면 투영에 의한 UV 분포) Spherical projection</p><p>(그림: 구면 투영에 의한 지구 텍스처 적용)</p><p>Cylindrical projection</p><p>(그림: 실린더 형태로 투영된 텍스처)</p><h2 id="rendering-texture-mapped-objects" tabindex="-1"><a class="header-anchor" href="#rendering-texture-mapped-objects"><span>Rendering Texture-Mapped Objects</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">for each pixel:</span>
<span class="line">(u, v) = texture coordinates at pixel</span>
<span class="line">color = texture.get_color(u, v)</span>
<span class="line">pixel.color = color</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>그러나 텍스처 좌표 함수는 각 정점(vertex)에 대해 정의됨</li><li>그렇다면 각 픽셀마다의 텍스처 좌표는 어떻게 계산할 수 있을까?</li><li>텍스처 좌표는 다각형 내부에서 barycentric interpolation으로 계산됨</li><li>다각형 내부의 각 픽셀에 대해, 픽셀이 포함된 삼각형의 정점 좌표에 따라 <code>(u, v)</code>가 결정됨</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>α</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>α</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>+</mo><msub><mi>α</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msub><mi>u</mi><mn>3</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(u, v) = \\alpha_1 (u_1, v_1) + \\alpha_2 (u_2, v_2) + \\alpha_3 (u_3, v_3) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>α</mi><mn>1</mn></msub><mo>+</mo><msub><mi>α</mi><mn>2</mn></msub><mo>+</mo><msub><mi>α</mi><mn>3</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\\alpha_1 + \\alpha_2 + \\alpha_3 = 1 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><h2 id="diffuse-specular-normal-maps" tabindex="-1"><a class="header-anchor" href="#diffuse-specular-normal-maps"><span>Diffuse, Specular, Normal Maps</span></a></h2><ul><li>텍스처 맵을 통해 정의할 수 있는 표면 속성은? <ul><li>diffuse color, specular color</li><li>specular 지수, 투명도, 반사율 계수</li><li>surface normal</li><li>그림자 또는 반사 정보</li><li>기타</li></ul></li></ul><h2 id="examples-of-diffuse-specular-normal-map" tabindex="-1"><a class="header-anchor" href="#examples-of-diffuse-specular-normal-map"><span>Examples of Diffuse, Specular, Normal Map</span></a></h2><p>(왼쪽부터)</p><ul><li>diffuse map</li><li>specular map</li><li>normal map</li></ul><p>(예시: Game of Thrones 캐릭터 텍스처)</p><ul><li>final 렌더링</li><li>diffuse</li><li>specular</li><li>wireframe</li><li>normal</li><li>texture map</li></ul><h2 id="normal-mapping-motivation" tabindex="-1"><a class="header-anchor" href="#normal-mapping-motivation"><span>Normal Mapping - Motivation</span></a></h2><ul><li><p>circle, sphere 비교</p></li><li><p>circle은 삼각형 개수가 적어 렌더링이 더 빠름</p></li><li><p>normal vector가 적절하면 circle도 sphere처럼 보일 수 있음</p></li><li><p>인간 시각은 실제 형상이 아닌 밝기 패턴으로 형태를 인식</p><ul><li>즉, 밝고 어두운 영역의 패턴은 normal에 의해 결정됨</li></ul></li></ul><h2 id="normal-mapping-basic-idea" tabindex="-1"><a class="header-anchor" href="#normal-mapping-basic-idea"><span>Normal Mapping - Basic Idea</span></a></h2><p>목표: 고폴리 모델처럼 보이는 저폴리 모델 만들기</p><ol><li>고폴리 모델의 normal을 텍스처 이미지에 somehow 인코딩</li><li>그 텍스처 이미지를 저폴리 모델에 적용</li></ol><p>(그림: normal 전파 예시)</p><h2 id="normal-mapping-example" tabindex="-1"><a class="header-anchor" href="#normal-mapping-example"><span>Normal Mapping - Example</span></a></h2><ul><li>좌: high-poly (814 triangles)</li><li>중: simplified (900 triangles)</li><li>우: 더 간단한 모델 (200 triangles)</li></ul><h2 id="normal-mapping-details" tabindex="-1"><a class="header-anchor" href="#normal-mapping-details"><span>Normal Mapping - Details</span></a></h2><ul><li>고폴리(high-poly) 모델의 normal vector를 각 픽셀의 RGB 값으로 인코딩</li><li>tangent space normal map에서는 픽셀 RGB가 u, v, w 축에 해당하는 normal 성분을 나타냄</li></ul><p>표기:</p><ul><li><p>R = Nᵤ, G = Nᵥ, B = Nʷ</p></li><li><p>u: 텍스처 u축</p></li><li><p>v: 텍스처 v축</p></li><li><p>w: 표면의 실제 normal 방향</p></li><li><p>R = Nᵤ, G = Nᵥ, B = Nʷ</p><ul><li>U: -1 to +1 → Red: 0 to 255</li><li>V: -1 to +1 → Green: 0 to 255</li><li>W: 0 to +1 → Blue: 128 to 255</li></ul></li><li><p>tangent space normal map이 푸르스름한 이유:</p><ul><li>대부분의 normal은 tangent space 기준 <code>(128, 128, 255)</code> 근처이기 때문</li></ul></li></ul><h2 id="bump-mapping" tabindex="-1"><a class="header-anchor" href="#bump-mapping"><span>Bump Mapping</span></a></h2><ul><li><p>목적은 normal mapping과 동일</p></li><li><p>핵심 아이디어:</p><ul><li>normal vector를 인코딩하는 대신 상대적인 높이(relative heights)를 저장 <ul><li>검정: 최소 높이 변화</li><li>흰색: 최대 높이 변화</li></ul></li></ul></li><li><p>normal은 높이맵으로부터 계산하여 적용</p></li></ul><h2 id="bump-mapping-example" tabindex="-1"><a class="header-anchor" href="#bump-mapping-example"><span>Bump Mapping Example</span></a></h2><p>(그림: 원본 오브젝트 + bump map = bump가 적용된 결과)</p><h2 id="displacement-mapping" tabindex="-1"><a class="header-anchor" href="#displacement-mapping"><span>Displacement Mapping</span></a></h2><ul><li><p>height map의 높이 변화량을 참조하여 실제로 정점의 위치를 이동시킴</p><ul><li>bump/normal mapping과 달리 실루엣 및 자기 그림자(self-shadowing)가 자연스럽게 표현됨</li></ul></li><li><p>기본적으로 normal/bump처럼 정점 간의 세부 표현을 제공하지는 않음</p><ul><li>세부 표현을 높이려면 정점을 더 추가해야 하므로 연산량 증가</li></ul></li></ul><p>(그림: subdivision 정도에 따른 displacement 차이)</p><h2 id="demo-normal-bump-displacement-mapping" tabindex="-1"><a class="header-anchor" href="#demo-normal-bump-displacement-mapping"><span>[Demo] Normal / Bump / Displacement Mapping</span></a></h2><ul><li>Normal mapping / Displacement mapping <ul><li>https://threejs.org/examples/#webgl_materials_displacementmap</li></ul></li><li>Bump mapping <ul><li>https://threejs.org/examples/#webgl_materials_bumpmap</li></ul></li></ul><h2 id="light-map" tabindex="-1"><a class="header-anchor" href="#light-map"><span>Light Map</span></a></h2><ul><li>light map은 사전 계산된 조명 정보를 저장하는 데 사용됨</li></ul><table><thead><tr><th>항목</th><th>Texture Maps</th><th>Light Maps</th></tr></thead><tbody><tr><td>데이터</td><td>RGB</td><td>밝기(Intensity)</td></tr><tr><td>해상도</td><td>높음</td><td>낮음</td></tr></tbody></table><p>(이미지: 텍스처만 적용된 장면 vs. 라이트맵이 적용된 장면 비교)</p><h2 id="shadow-map" tabindex="-1"><a class="header-anchor" href="#shadow-map"><span>Shadow Map</span></a></h2><ul><li>light view에서의 depth map을 이용해 샘플 지점이 보이는지를 판단 <ul><li>눈에는 보이지만 광원에 가려진 지점은 그림자로 표시됨</li></ul></li></ul><p>(그림: teapot을 기준으로 광원 방향에서 깊이 확인)</p><h2 id="environment-map" tabindex="-1"><a class="header-anchor" href="#environment-map"><span>Environment Map</span></a></h2><ul><li>복잡한 거울같은 효과를 갖는 객체 시뮬레이션 <ul><li>객체 주변 환경을 텍스처로 캡처</li><li>표면 normal을 이용해 텍스처 좌표 계산</li></ul></li></ul><p>(그림: 구면에 적용된 environment map)</p><h2 id="practice-online-demos" tabindex="-1"><a class="header-anchor" href="#practice-online-demos"><span>[Practice] Online Demos</span></a></h2><ul><li><p>Light mapping</p><ul><li>https://threejs.org/examples/?q=light#webgl_lights_physical</li></ul></li><li><p>Shadow mapping</p><ul><li>https://threejs.org/examples/#webgl_shadowmap</li></ul></li><li><p>Environment mapping</p><ul><li>https://threejs.org/examples/#webgl_materials_cubemap_dynamic</li><li>https://threejs.org/examples/?q=refrac#webgl_materials_cubemap_refraction</li></ul></li></ul><h1 id="_12-lab-texture-mapping" tabindex="-1"><a class="header-anchor" href="#_12-lab-texture-mapping"><span>12 - Lab - Texture Mapping</span></a></h1><h2 id="outline-1" tabindex="-1"><a class="header-anchor" href="#outline-1"><span>Outline</span></a></h2><ul><li>Pillow 설치</li><li>텍스처가 적용된 단일 삼각형</li><li>텍스처 필터링</li><li>밉맵</li><li>텍스처 래핑</li><li>다중 텍스처</li></ul><h2 id="install-pillow" tabindex="-1"><a class="header-anchor" href="#install-pillow"><span>Install Pillow</span></a></h2><ul><li><p>Pillow: 대중적인 파이썬 이미지 처리 라이브러리</p></li><li><p>설치:</p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line">$ workon cg-course</span>
<span class="line">$ pip <span class="token function">install</span> pillow</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>문서:<br> https://pillow.readthedocs.io/en/stable/index.html</li></ul><h2 id="code-1-triangle-texture" tabindex="-1"><a class="header-anchor" href="#code-1-triangle-texture"><span>[Code] 1-triangle-texture</span></a></h2><ul><li>&quot;5-Lab-3DTransformations-VertProcess/1/3-lookat.py&quot;에서 시작</li><li>프레임을 그리는 코드 제거</li><li>PIL(Pillow) 모듈 import:</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>VAO <ul><li>이제 vertex 데이터에는 꼭짓점 위치와 색상뿐 아니라 텍스처 좌표도 포함됨</li></ul></li></ul><p>vertex 배열 구성 예시:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line"># positions      # colors         # texture coordinates</span>
<span class="line">0.0,  0.5, 0.0,   1.0, 0.0, 0.0,   0.5, 1.0,</span>
<span class="line">-0.5, -0.5, 0.0,  0.0, 1.0, 0.0,   0.0, 0.0,</span>
<span class="line">0.5, -0.5, 0.0,   0.0, 0.0, 1.0,   1.0, 0.0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>VAO 생성 및 활성화</li><li>VBO 생성 및 데이터 복사</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">prepare_vao_triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 꼭짓점 위치 속성 설정</span></span>
<span class="line">    glVertexAttribPointer<span class="token punctuation">(</span>index<span class="token punctuation">,</span> size<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">,</span> normalized<span class="token punctuation">,</span> stride<span class="token punctuation">,</span> pointer<span class="token punctuation">)</span></span>
<span class="line">    glEnableVertexAttribArray<span class="token punctuation">(</span>index<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 꼭짓점 색상 속성 설정</span></span>
<span class="line">    glVertexAttribPointer<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line">    glEnableVertexAttribArray<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 텍스처 좌표 속성 설정 - 2D 데이터</span></span>
<span class="line">    glVertexAttribPointer<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line">    glEnableVertexAttribArray<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> VAO</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>이미지를 로드하고 텍스처 객체를 생성하는 과정</p></li><li><p>텍스처 객체를 생성하고 바인딩: <code>glGenTextures</code>, <code>glBindTexture</code></p></li><li><p>이미지 로드: Pillow 라이브러리 사용 (<code>Image.open</code>)</p></li><li><p>로드한 이미지를 텍스처로 설정: <code>glTexImage2D</code></p></li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># 텍스처 객체 생성</span></span>
<span class="line">    texture <span class="token operator">=</span> glGenTextures<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    glBindTexture<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> texture<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 텍스처 필터링 파라미터 설정</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MIN_FILTER<span class="token punctuation">,</span> GL_LINEAR<span class="token punctuation">)</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MAG_FILTER<span class="token punctuation">,</span> GL_LINEAR<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;./A02pysc-Solarsystemscope_texture_8k_earth_daymap.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 이미지 수직 뒤집기 (OpenGL의 y축 방향 때문)</span></span>
<span class="line">        img <span class="token operator">=</span> img<span class="token punctuation">.</span>transpose<span class="token punctuation">(</span>Image<span class="token punctuation">.</span>FLIP_TOP_BOTTOM<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment"># 텍스처 이미지로 설정</span></span>
<span class="line">        glTexImage2D<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> GL_RGB<span class="token punctuation">,</span> img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> img<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">                     GL_RGB<span class="token punctuation">,</span> GL_UNSIGNED_BYTE<span class="token punctuation">,</span> img<span class="token punctuation">.</span>tobytes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        img<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">except</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Failed to load texture&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>glTexImage2D</code> 함수 사용 예시 및 설명</li></ul><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token function">glTexImage2D</span><span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> GL_RGB<span class="token punctuation">,</span> img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> img<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">             GL_RGB<span class="token punctuation">,</span> GL_UNSIGNED_BYTE<span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">tobytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>glTexImage2D(target, level, internalformat, width, height, border, format, type, data)</code><ul><li><code>target</code>: 텍스처 대상. GL_TEXTURE_2D로 설정</li><li><code>level</code>: 디테일 레벨. 보통 0 (glGenerateMipmap 사용 시 변경 가능)</li><li><code>internalformat</code>: 텍스처를 저장할 내부 포맷</li><li><code>width</code>, <code>height</code>: 이미지 크기</li><li><code>border</code>: <code>0</code> (레거시 값)</li><li><code>format</code>, <code>type</code>: 원본 이미지의 포맷과 데이터 타입</li><li><code>data</code>: 메모리 상의 이미지 데이터</li></ul></li><li>Vertex Shader 코드</li></ul><div class="language-glsl line-numbers-mode" data-highlighter="prismjs" data-ext="glsl"><pre><code class="language-glsl"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">version</span> <span class="token expression"><span class="token number">330</span> core</span></span></span>
<span class="line"><span class="token keyword">layout</span> <span class="token punctuation">(</span>location <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token keyword">vec3</span> vin_pos<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">layout</span> <span class="token punctuation">(</span>location <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token keyword">vec3</span> vin_color<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">layout</span> <span class="token punctuation">(</span>location <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token keyword">vec2</span> vin_uv<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">out</span> <span class="token keyword">vec3</span> vout_color<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">out</span> <span class="token keyword">vec2</span> vout_uv<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">uniform</span> <span class="token keyword">mat4</span> MVP<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 동차 좌표계에서의 3D 위치 계산</span></span>
<span class="line">    <span class="token keyword">vec4</span> pos4 <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>vin_pos<span class="token punctuation">.</span>xyz<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    gl_Position <span class="token operator">=</span> MVP <span class="token operator">*</span> pos4<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    vout_color <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>vin_color<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    vout_uv <span class="token operator">=</span> vin_uv<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Fragment Shader 코드</li></ul><div class="language-glsl line-numbers-mode" data-highlighter="prismjs" data-ext="glsl"><pre><code class="language-glsl"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">version</span> <span class="token expression"><span class="token number">330</span> core</span></span></span>
<span class="line"><span class="token keyword">in</span> <span class="token keyword">vec2</span> vout_uv<span class="token punctuation">;</span>          <span class="token comment">// 보간된 텍스처 좌표</span></span>
<span class="line"><span class="token keyword">in</span> <span class="token keyword">vec3</span> vout_color<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">out</span> <span class="token keyword">vec4</span> FragColor<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">uniform</span> <span class="token keyword">sampler2D</span> texture1<span class="token punctuation">;</span>  <span class="token comment">// GLSL 내장 sampler 타입</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// FragColor = vec4(vout_color, 1.0);  // 색상만 사용하는 경우</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 텍스처 좌표에 따라 색상 샘플링</span></span>
<span class="line">    FragColor <span class="token operator">=</span> <span class="token function">texture</span><span class="token punctuation">(</span>texture1<span class="token punctuation">,</span> vout_uv<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>최종 그리기 루프</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token keyword">not</span> glfwWindowShouldClose<span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token comment"># 현재 프레임 기준으로 삼각형을 그림</span></span>
<span class="line">        glBindVertexArray<span class="token punctuation">(</span>vao_triangle<span class="token punctuation">)</span></span>
<span class="line">        glDrawArrays<span class="token punctuation">(</span>GL_TRIANGLES<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>아직 uniform 변수 <code>texture1</code>의 값을 설정하지 않음</li><li>GLSL에서는 sampler uniform이 기본값 0으로 설정된다는 보장이 없음</li><li>대부분 드라이버에서 기본값이 0(GL_TEXTURE0)이기 때문에 잘 작동하지만,<br> 플랫폼이나 GPU에 따라 명시적으로 지정해주는 것이 안전함</li><li>아래 코드를 추가하여 uniform 바인딩을 명확히 설정:</li></ul><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line">loc_texture1 <span class="token operator">=</span> <span class="token function">glGetUniformLocation</span><span class="token punctuation">(</span>shader_program<span class="token punctuation">,</span> <span class="token string">&quot;texture1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">glActiveTexture</span><span class="token punctuation">(</span>GL_TEXTURE0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">glBindTexture</span><span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> texture1<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token function">glUniform1i</span><span class="token punctuation">(</span>loc_texture1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(이미지 설명: 좌측 하단 그림은 지구 텍스처를 삼각형에 매핑한 예시임)</p><h2 id="code-2-triangle-texture-color" tabindex="-1"><a class="header-anchor" href="#code-2-triangle-texture-color"><span>[Code] 2-triangle-texture-color</span></a></h2><ul><li>vertex 색상과 텍스처를 함께 사용할 수 있음</li><li>예: 텍스처 값에 색상 값을 곱해 시각적 효과 추가</li></ul><div class="language-glsl line-numbers-mode" data-highlighter="prismjs" data-ext="glsl"><pre><code class="language-glsl"><span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    FragColor <span class="token operator">=</span> <span class="token function">texture</span><span class="token punctuation">(</span>texture1<span class="token punctuation">,</span> vout_uv<span class="token punctuation">)</span> <span class="token operator">*</span> vout_color<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(이미지 설명: 색상이 적용된 지구 이미지의 텍스처 예시)</p><h2 id="code-3-triangle-texture-filter" tabindex="-1"><a class="header-anchor" href="#code-3-triangle-texture-filter"><span>[Code] 3-triangle-texture-filter</span></a></h2><ul><li>더 큰 삼각형을 그려보자</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">while</span> <span class="token keyword">not</span> glfwWindowShouldClose<span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">        <span class="token comment"># 모델링 행렬</span></span>
<span class="line">        M <span class="token operator">=</span> glm<span class="token punctuation">.</span>mat4<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        M <span class="token operator">=</span> glm<span class="token punctuation">.</span>scale<span class="token punctuation">(</span>glm<span class="token punctuation">.</span>vec3<span class="token punctuation">(</span><span class="token number">3.5</span><span class="token punctuation">,</span> <span class="token number">5.5</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(이미지 설명: 확대된 삼각형에 저해상도 텍스처가 뚜렷하게 보임)</p><ul><li>더 부드러운 결과를 얻으려면?</li></ul><p>(이미지 설명: 왼쪽은 GL_NEAREST로 픽셀이 뚜렷함, 오른쪽은 <code>GL_LINEAR로</code> 보간되어 부드럽게 표현됨)</p><ul><li>텍스처 필터링(Texture filtering)은 주어진 <code>(u, v)</code>에 대한 색상 값을 계산하는 방식 지정</li><li>텍스처 좌표는 실수이므로 정확히 픽셀 중심과 일치하지 않을 수 있음</li><li><code>GL_NEAREST</code>: 가장 가까운 텍셀(texel)의 색상을 사용 (픽셀화된 결과)</li><li><code>GL_LINEAR</code>: 주변 텍셀을 보간하여 색상을 계산 (부드러운 결과) (이미지 설명: 좌측은 Nearest 필터, 우측은 Linear 필터에 따른 픽셀 시각화 예시)</li><li><code>MIN</code> 필터와 <code>MAG</code> 필터를 구분해서 설정 가능</li><li><code>MIN</code> 필터: 축소 시</li><li><code>MAG</code> 필터: 확대 시</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token comment"># 텍스처 생성</span></span>
<span class="line">    texture <span class="token operator">=</span> glGenTextures<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    glBindTexture<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> texture<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># GL_NEAREST 설정 예시</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MIN_FILTER<span class="token punctuation">,</span> GL_NEAREST<span class="token punctuation">)</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MAG_FILTER<span class="token punctuation">,</span> GL_NEAREST<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># GL_LINEAR 설정 예시</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MIN_FILTER<span class="token punctuation">,</span> GL_LINEAR<span class="token punctuation">)</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MAG_FILTER<span class="token punctuation">,</span> GL_LINEAR<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;./230px-Solarsystemscope_texture_8k_earth_daymap.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(이미지 설명: Python 코드에서 MIN/MAG 필터를 GL_LINEAR 또는 GL_NEAREST로 설정하는 예시)</p><h2 id="code-4-triangle-texture-mipmaps" tabindex="-1"><a class="header-anchor" href="#code-4-triangle-texture-mipmaps"><span>[Code] 4-triangle-texture-mipmaps</span></a></h2><ul><li>고해상도 텍스처를 멀리 있는 물체에 사용할 경우, 한 픽셀에 모든 정보가 들어가 비효율적임</li><li>이를 해결하기 위해 <strong>mipmap</strong> 사용 <ul><li>mipmap은 동일 텍스처의 해상도를 점점 낮춘 이미지 집합</li><li>객체와의 거리 등에 따라 적절한 해상도의 레벨을 선택해 사용</li><li>OpenGL은 자동으로 적절한 mipmap 레벨을 선택</li></ul></li></ul><p>(이미지 설명: 각 레벨마다 텍스처 해상도가 절반씩 줄어들며, 픽셀 수준의 샘플링이 이루어짐)</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token comment"># GL_TEXTURE_MIN_FILTER: 축소 시 필터링 방식</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MIN_FILTER<span class="token punctuation">,</span> GL_LINEAR_MIPMAP_LINEAR<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># GL_LINEAR_MIPMAP_LINEAR: 인접한 두 mipmap 레벨에서 각각 선형 보간 후, 다시 선형 보간</span></span>
<span class="line">    <span class="token comment"># GL_LINEAR_MIPMAP_NEAREST: 가까운 두 레벨 중 하나 선택 + 내부는 선형 보간</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># GL_TEXTURE_MAG_FILTER: 확대 시 필터링 방식</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_MAG_FILTER<span class="token punctuation">,</span> GL_LINEAR<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    glTexImage2D<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> GL_RGB<span class="token punctuation">,</span> img<span class="token punctuation">.</span>width<span class="token punctuation">,</span> img<span class="token punctuation">.</span>height<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span></span>
<span class="line">                 GL_RGB<span class="token punctuation">,</span> GL_UNSIGNED_BYTE<span class="token punctuation">,</span> img<span class="token punctuation">.</span>tobytes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    glGenerateMipmap<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="code-5-triangle-texture-wrap" tabindex="-1"><a class="header-anchor" href="#code-5-triangle-texture-wrap"><span>[Code] 5-triangle-texture-wrap</span></a></h2><ul><li><p>텍스처 좌표가 <code>(0.0, 1.0)</code> 범위를 벗어날 경우 OpenGL은 어떻게 처리할까?</p></li><li><p>텍스처 래핑 방식 4가지:</p><ul><li><code>GL_REPEAT</code>: 기본값, 텍스처 반복</li><li><code>GL_MIRRORED_REPEAT</code>: 반전하며 반복</li><li><code>GL_CLAMP_TO_EDGE</code>: 가장자리를 늘림</li><li><code>GL_CLAMP_TO_BORDER</code>: 테두리 색상으로 채움</li></ul></li></ul><p>(이미지 설명: 각각의 wrapping 모드에 따른 시각적 차이 비교)</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">prepare_vao_triangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    vertices <span class="token operator">=</span> glm<span class="token punctuation">.</span>array<span class="token punctuation">(</span>glm<span class="token punctuation">.</span>float32<span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment"># position        # color       # texture coordinates</span></span>
<span class="line">         <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span>    <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span>   <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span>  <span class="token comment"># v0</span></span>
<span class="line">         <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span>    <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span>    <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span>  <span class="token comment"># v1</span></span>
<span class="line">         <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span>    <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span>   <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">2.0</span>    <span class="token comment"># v2</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>(텍스처 좌표가 0~1을 벗어나도록 지정해 wrap 모드에 따른 차이를 실험)</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token comment"># 기본값은 GL_REPEAT</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># GL_TEXTURE_WRAP_S: 수평(u) 방향 설정</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_WRAP_S<span class="token punctuation">,</span> GL_CLAMP_TO_EDGE<span class="token punctuation">)</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_WRAP_S<span class="token punctuation">,</span> GL_MIRRORED_REPEAT<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># GL_TEXTURE_WRAP_T: 수직(v) 방향 설정</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_WRAP_T<span class="token punctuation">,</span> GL_REPEAT<span class="token punctuation">)</span></span>
<span class="line">    glTexParameteri<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_WRAP_T<span class="token punctuation">,</span> GL_CLAMP_TO_BORDER<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 경계색 설정 (GL_CLAMP_TO_BORDER 시 사용됨)</span></span>
<span class="line">    border_color <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">]</span></span>
<span class="line">    glTexParameterfv<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> GL_TEXTURE_BORDER_COLOR<span class="token punctuation">,</span> border_color<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="code-6-cube-multiple-textures" tabindex="-1"><a class="header-anchor" href="#code-6-cube-multiple-textures"><span>[Code] 6-cube-multiple-textures</span></a></h2><ul><li>두 개의 이미지를 로드하여 diffuse map과 specular map으로 각각 사용</li><li>다양한 조명 효과 표현 가능</li></ul><p>(이미지 설명: 왼쪽은 diffuse map, 가운데는 specular map, 오른쪽은 결과 큐브)</p><ul><li><code>glUniform1i</code>를 사용하여 sampler uniform에 texture unit의 위치를 할당 가능</li><li>이를 통해 fragment shader에서 <strong>여러 텍스처를 동시에 사용할 수 있음</strong></li><li>기본 방식: <ul><li>각 sampler 변수에 대해 <code>glUniform1i</code>로 texture unit 인덱스 지정</li><li><code>glActiveTexture(GL_TEXTUREi)</code>로 활성화</li><li><code>glBindTexture(GL_TEXTURE_2D, texture)</code>로 바인딩</li></ul></li></ul><p>(요약: diffuse map과 specular map을 동시에 사용하는 구조)</p><ul><li><code>8-Lab-Lighting/4-all-components-phong-faceonvm.py</code>에서 시작</li><li>Pillow import</li><li>VAO의 vertex data에 texture coordinate 추가</li><li>sampler uniform 변수 <code>texture_diffuse</code>, <code>texture_specular</code>를 텍스처 객체에 연결</li><li>shader 내부에서 diffuse/ambient는 <code>texture_diffuse</code>로부터,<br> specular은 <code>texture_specular</code>로부터 샘플링</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># diffuse texture</span></span>
<span class="line">    texture_diffuse <span class="token operator">=</span> glGenTextures<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    glBindTexture<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> texture_diffuse<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;./230px-Solarsystemscope_texture_8k_earth_daymap.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># specular texture</span></span>
<span class="line">    texture_specular <span class="token operator">=</span> glGenTextures<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    glBindTexture<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> texture_specular<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">try</span><span class="token punctuation">:</span></span>
<span class="line">        img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&quot;./plain-checkerboard.jpg&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment"># 유니폼에 texture unit 인덱스 지정</span></span>
<span class="line">    glUniform1i<span class="token punctuation">(</span>glGetUniformLocation<span class="token punctuation">(</span>shader_program<span class="token punctuation">,</span> <span class="token string">&quot;texture_diffuse&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    glActiveTexture<span class="token punctuation">(</span>GL_TEXTURE0<span class="token punctuation">)</span></span>
<span class="line">    glBindTexture<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> texture_diffuse<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    glUniform1i<span class="token punctuation">(</span>glGetUniformLocation<span class="token punctuation">(</span>shader_program<span class="token punctuation">,</span> <span class="token string">&quot;texture_specular&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    glActiveTexture<span class="token punctuation">(</span>GL_TEXTURE1<span class="token punctuation">)</span></span>
<span class="line">    glBindTexture<span class="token punctuation">(</span>GL_TEXTURE_2D<span class="token punctuation">,</span> texture_specular<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Vertex Shader</li></ul><div class="language-glsl line-numbers-mode" data-highlighter="prismjs" data-ext="glsl"><pre><code class="language-glsl"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">version</span> <span class="token expression"><span class="token number">330</span> core</span></span></span>
<span class="line"><span class="token keyword">layout</span> <span class="token punctuation">(</span>location <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token keyword">vec3</span> vin_pos<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">layout</span> <span class="token punctuation">(</span>location <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token keyword">vec3</span> vin_normal<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">layout</span> <span class="token punctuation">(</span>location <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token keyword">vec2</span> vin_uv<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">out</span> <span class="token keyword">vec3</span> vout_surface_pos<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">out</span> <span class="token keyword">vec3</span> vout_normal<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">out</span> <span class="token keyword">vec2</span> vout_uv<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">uniform</span> <span class="token keyword">mat4</span> MVP<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">uniform</span> <span class="token keyword">mat4</span> M<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">vec4</span> pos4 <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>vin_pos<span class="token punctuation">.</span>xyz<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    gl_Position <span class="token operator">=</span> MVP <span class="token operator">*</span> pos4<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    vout_surface_pos <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span>M <span class="token operator">*</span> pos4<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    vout_normal <span class="token operator">=</span> <span class="token function">normalize</span><span class="token punctuation">(</span><span class="token keyword">mat3</span><span class="token punctuation">(</span><span class="token function">transpose</span><span class="token punctuation">(</span><span class="token function">inverse</span><span class="token punctuation">(</span>M<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> vin_normal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    vout_uv <span class="token operator">=</span> vin_uv<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Fragment Shader</li></ul><div class="language-glsl line-numbers-mode" data-highlighter="prismjs" data-ext="glsl"><pre><code class="language-glsl"><span class="line"><span class="token keyword">in</span> <span class="token keyword">vec2</span> vout_uv<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">uniform</span> <span class="token keyword">sampler2D</span> texture_diffuse<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">uniform</span> <span class="token keyword">sampler2D</span> texture_specular<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 재질 색상 계산 예시</span></span>
<span class="line">    <span class="token keyword">vec3</span> material_color <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 기본값</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 텍스처에서 diffuse 색상 샘플링</span></span>
<span class="line">    <span class="token keyword">vec3</span> material_diffuse <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token function">texture</span><span class="token punctuation">(</span>texture_diffuse<span class="token punctuation">,</span> vout_uv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 비금속 재질에서 specular 사용 예시</span></span>
<span class="line">    <span class="token keyword">vec3</span> material_specular <span class="token operator">=</span> <span class="token keyword">vec3</span><span class="token punctuation">(</span><span class="token function">texture</span><span class="token punctuation">(</span>texture_specular<span class="token punctuation">,</span> vout_uv<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 최종 색상 조합 예시</span></span>
<span class="line">    FragColor <span class="token operator">=</span> <span class="token keyword">vec4</span><span class="token punctuation">(</span>diffuse <span class="token operator">+</span> specular<span class="token punctuation">,</span> <span class="token number">1.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>큐브를 구성하는 12개의 삼각형에 대해 vertex 데이터 구성</li></ul><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line"><span class="token keyword">def</span> <span class="token function">prepare_vao_cube</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    vertices <span class="token operator">=</span> glm<span class="token punctuation">.</span>array<span class="token punctuation">(</span>glm<span class="token punctuation">.</span>float32<span class="token punctuation">,</span></span>
<span class="line">        <span class="token comment"># pos        normal       texcoord</span></span>
<span class="line">        <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment"># v0</span></span>
<span class="line">         <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment"># v1</span></span>
<span class="line">         <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token comment"># v2</span></span>
<span class="line">        <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token comment"># v0</span></span>
<span class="line">         <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token comment"># v2</span></span>
<span class="line">        <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>   <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token comment"># v3</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,168)])])}const o=n(l,[["render",t]]),u=JSON.parse('{"path":"/cg/12-More-Lighting-Texture.html","title":"12 - More Lighting, Texture","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1750193332000,"contributors":[{"name":"김병준","username":"","email":"kmbzn24@hanyang.ac.kr","commits":4},{"name":"kmbzn","username":"kmbzn","email":"kmbzn@example.com","commits":1,"url":"https://github.com/kmbzn"}],"changelog":[{"hash":"d7b6d298b7e62ac116fc36489fd8673843d25baf","time":1750193332000,"email":"kmbzn@example.com","author":"kmbzn","message":"update cg"},{"hash":"bb6dfcb0d70402dd44243a50647d1657fd1ef32d","time":1749938362000,"email":"kmbzn24@hanyang.ac.kr","author":"김병준","message":"update cg"},{"hash":"7dfc10ae87be9ce0083cb39d24d30b15e77a0371","time":1749897692000,"email":"kmbzn24@hanyang.ac.kr","author":"김병준","message":"directory name change"},{"hash":"125cb511a8bd4790e4b3f7d0cb5ca4a156e104cd","time":1749684130000,"email":"kmbzn24@hanyang.ac.kr","author":"김병준","message":"update 제목"},{"hash":"26b39443ffd9391fdd06d3632c5eb0da89831c13","time":1749682883000,"email":"kmbzn24@hanyang.ac.kr","author":"김병준","message":"update graphics"}]},"filePathRelative":"cg/12-More-Lighting-Texture.md"}');export{o as comp,u as data};
