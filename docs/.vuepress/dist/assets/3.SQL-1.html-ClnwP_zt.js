import{_ as a,c as n,a as e,o as l}from"./app-CXa5lrE-.js";const t={};function i(p,s){return l(),n("div",null,[...s[0]||(s[0]=[e(`<h1 id="_3-sql" tabindex="-1"><a class="header-anchor" href="#_3-sql"><span>3. SQL</span></a></h1><h2 id="sql-parts" tabindex="-1"><a class="header-anchor" href="#sql-parts"><span>SQL Parts</span></a></h2><ul><li>DDL (Data Definition Language, 데이터 정의어) <ul><li>데이터베이스 스키마(schema) 정의 수단 제공</li></ul></li><li>DML (Data Manipulation Language, 데이터 조작어) <ul><li>데이터베이스 정보 질의 및 튜플(tuple) 삽입, 삭제, 수정 기능 제공</li></ul></li><li>Integrity (무결성) <ul><li>DDL은 무결성 제약 조건(integrity constraints) 명시 명령어 포함</li></ul></li><li>View definition (뷰 정의) <ul><li>DDL은 뷰(view) 정의 명령어 포함</li></ul></li><li>Transaction control (트랜잭션 제어) <ul><li>트랜잭션(transaction)의 시작과 끝을 명시하는 명령어 포함</li></ul></li><li>Embedded SQL and dynamic SQL (embedded SQL 및 동적 SQL) <ul><li>범용 프로그래밍 언어 내에 SQL 문장을 삽입하는 방법 정의</li></ul></li><li>Authorization (권한 부여) <ul><li>관계(relation) 및 뷰에 대한 접근 권한 명시 명령어 포함</li></ul></li></ul><h2 id="data-definition-language" tabindex="-1"><a class="header-anchor" href="#data-definition-language"><span>Data Definition Language</span></a></h2><ul><li>SQL DDL은 관계에 대한 정보 명시 허용, 다음 포함: <ul><li>각 관계의 스키마</li><li>각 속성(attribute)과 관련된 값의 유형</li><li>무결성 제약 조건</li><li>각 관계에 대해 유지될 인덱스(index) 집합</li><li>각 관계에 대한 보안 및 권한 정보</li><li>디스크 상의 각 관계에 대한 물리적 저장 구조</li></ul></li></ul><h2 id="ddl-domain-types-in-sql" tabindex="-1"><a class="header-anchor" href="#ddl-domain-types-in-sql"><span>DDL: Domain Types in SQL</span></a></h2><ul><li><code>char(n)</code>: 사용자 지정 길이 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>의 고정 길이 문자열</li><li><code>varchar(n)</code>: 사용자 지정 최대 길이 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>의 가변 길이 문자열</li><li><code>int</code>: 정수 (기계에 의존하는 정수의 유한 부분 집합)</li><li><code>smallint</code>: 작은 정수 (정수 도메인 유형의 기계 의존적 부분 집합)</li><li><code>numeric(p,d)</code>: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>자리의 사용자 지정 정밀도와 소수점 이하 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span></span></span></span>자리를 가진 고정 소수점 숫자 (예: <code>numeric(3,1)</code>은 44.5는 정확히 저장 가능하나, 444.5나 0.32는 불가)</li><li><code>real</code>, <code>double precision</code>: 기계 의존적 정밀도를 가진 부동 소수점 및 배정밀도 부동 소수점 숫자</li><li><code>float(n)</code>: 최소 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>자리의 사용자 지정 정밀도를 가진 부동 소수점 숫자</li><li>추가적인 내용은 4장에서 다룸</li></ul><h2 id="ddl-create-table-construct" tabindex="-1"><a class="header-anchor" href="#ddl-create-table-construct"><span>DDL: Create Table Construct</span></a></h2><ul><li>SQL 관계는 <code>create table</code> 명령어를 사용하여 정의: <ul><li><code>create table r (A1 D1, A2 D2, ..., An Dn, (integrity-constraint1), ..., (integrity-constraintk));</code></li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>은 관계의 이름</li><li>각 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>는 관계 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>의 스키마에 있는 속성 이름</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">D_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>는 속성 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>의 도메인(domain)에 있는 값의 데이터 유형</li><li>예시:<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">create</span> <span class="token keyword">table</span> instructor<span class="token punctuation">(</span></span>
<span class="line">    ID        <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    name      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    dept_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    salary    <span class="token keyword">numeric</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="ddl-integrity-constraints-in-create-table" tabindex="-1"><a class="header-anchor" href="#ddl-integrity-constraints-in-create-table"><span>DDL: Integrity Constraints in Create Table</span></a></h2><ul><li>무결성 제약 조건의 유형 <ul><li><code>primary key(A1, ..., An)</code><ul><li>이 관계의 모든 튜플은 서로 다른 기본 키 값을 가져야 함</li><li>위의 Primary-key constraint (기본 키 제약 조건) 강제</li></ul></li><li><code>foreign key (Am, ..., An) references r</code><ul><li>Foreign-key constraint (외래 키 제약 조건) 강제</li></ul></li><li><code>not null</code><ul><li>이 속성이 NULL 값을 가질 수 없도록 강제</li></ul></li></ul></li><li>SQL은 무결성 제약 조건을 위반하는 데이터베이스 업데이트 방지</li><li>예시:<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">create</span> <span class="token keyword">table</span> instructor<span class="token punctuation">(</span></span>
<span class="line">    ID        <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    name      <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span></span>
<span class="line">    dept_name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    salary    <span class="token keyword">numeric</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">primary</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>ID<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">foreign</span> <span class="token keyword">key</span> <span class="token punctuation">(</span>dept_name<span class="token punctuation">)</span> <span class="token keyword">references</span> department</span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="updates-to-tables" tabindex="-1"><a class="header-anchor" href="#updates-to-tables"><span>Updates to tables</span></a></h2><ul><li>Insert <ul><li><code>insert into instructor values(&#39;10211&#39;, &#39;Smith&#39;, &#39;Biology&#39;, 66000);</code></li></ul></li><li>Delete <ul><li><code>student</code> 관계에서 모든 튜플 제거</li><li><code>delete from student;</code></li></ul></li><li>Drop Table <ul><li><code>drop table r;</code></li></ul></li><li>Alter <ul><li><code>alter table r add A D;</code><ul><li>여기서 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>는 관계 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>에 추가될 속성의 이름이고 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>는 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>의 도메인</li><li>관계의 모든 기존 튜플은 새 속성에 대해 <code>null</code> 값으로 할당됨</li></ul></li><li><code>alter table r drop A;</code><ul><li>여기서 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>는 관계 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>의 속성 이름</li><li>속성 삭제는 많은 데이터베이스에서 지원하지 않음</li></ul></li></ul></li></ul><h2 id="basic-query-structure" tabindex="-1"><a class="header-anchor" href="#basic-query-structure"><span>Basic Query Structure</span></a></h2><ul><li>일반적인 SQL 질의 형태: <ul><li><code>select A1, A2, ..., An from r1, r2, ..., rm where P;</code></li></ul></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>는 속성을 나타냄</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>는 관계를 나타냄</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>는 술어(predicate)</li><li>대응하는 관계 대수(relational algebra)<p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><msub><mi>A</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>A</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>A</mi><mi>n</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>σ</mi><mi mathvariant="normal">_</mi><mi>P</mi><mo stretchy="false">(</mo><msub><mi>r</mi><mn>1</mn></msub><mo>×</mo><msub><mi>r</mi><mn>2</mn></msub><mo>×</mo><mo>⋯</mo><mo>×</mo><msub><mi>r</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\Pi _{A_1, A_2, \\dots, A_n}(\\sigma\\_P(r_1 \\times r_2 \\times \\dots \\times r_m)) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.06em;vertical-align:-0.31em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="minner mtight">…</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span></span></p></li><li>SQL 질의의 결과는 관계</li></ul><h2 id="the-select-clause" tabindex="-1"><a class="header-anchor" href="#the-select-clause"><span>The select Clause</span></a></h2><ul><li><code>select</code> 절은 질의 결과에서 원하는 속성을 나열</li><li>관계 대수의 프로젝션(projection) 연산에 해당</li><li>예시: 모든 강사의 이름 찾기 <ul><li><code>select name from instructor;</code></li></ul></li><li>참고: SQL 이름은 대소문자를 구분하지 않음 (예: <code>Name</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≡</span></span></span></span> <code>NAME</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≡</span></span></span></span> <code>name</code>)</li><li>SQL은 관계뿐만 아니라 질의 결과에서도 중복을 허용</li><li>중복 제거를 강제하려면 <code>select</code> 뒤에 <code>distinct</code> 키워드 삽입 <ul><li>모든 강사의 학과 이름을 찾고 중복 제거</li><li><code>select distinct dept_name from instructor;</code></li></ul></li><li><code>all</code> 키워드는 중복이 제거되지 않아야 함을 명시 <ul><li><code>select all dept_name from instructor;</code></li></ul></li><li><code>select</code> 절의 별표(<code>*</code>)는 &quot;모든 속성&quot;을 의미 <ul><li><code>select * from instructor;</code></li><li><code>select instructor.* from instructor, teaches;</code></li></ul></li><li>속성은 <code>from</code> 절 없이 리터럴(literal)이 될 수 있음 <ul><li><code>select &#39;437&#39;;</code></li><li>결과는 &quot;437&quot; 값을 가진 단일 행과 하나의 열을 가진 테이블</li></ul></li><li>다음을 사용하여 열에 이름 부여 가능: <ul><li><code>select &#39;437&#39; as FOO;</code></li></ul></li><li>속성은 <code>from</code> 절과 함께 리터럴이 될 수 있음 <ul><li><code>select &#39;A&#39; from instructor;</code></li><li>결과는 하나의 열과 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>개의 행(<code>instructor</code> 테이블의 튜플 수)을 가진 테이블이며, 각 행의 값은 &quot;A&quot;</li></ul></li><li><code>select</code> 절은 <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> 연산을 포함하는 산술 표현식을 포함할 수 있으며, 상수 또는 튜플의 속성에 대해 연산</li><li>질의: <code>select ID, name, dept_name, salary/12 from instructor;</code><ul><li><code>instructor</code> 관계와 동일하지만 <code>salary</code> 속성 값이 12로 나누어진 관계를 반환</li><li>일반화된 프로젝션 연산에 해당</li></ul></li><li><code>as</code> 절을 사용하여 &quot;salary/12&quot;의 이름 변경 가능: <ul><li><code>select ID, name, dept_name, salary/12 as monthly_salary;</code></li></ul></li></ul><h2 id="the-where-clause" tabindex="-1"><a class="header-anchor" href="#the-where-clause"><span>The where Clause</span></a></h2><ul><li><code>where</code> 절은 결과가 만족해야 하는 조건을 명시</li><li>관계 대수의 선택(selection) 술어에 해당</li><li>컴퓨터 공학(Comp. Sci.)과의 모든 강사 찾기 <ul><li><code>select name from instructor where dept_name = &#39;Comp. Sci.&#39;;</code></li></ul></li><li>SQL은 논리적 연결사 <code>and</code>, <code>or</code>, <code>not</code> 사용을 허용</li><li>논리적 연결사의 피연산자는 비교 연산자 <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>=</code>, <code>&lt;&gt;</code>를 포함하는 표현식이 될 수 있음</li><li>비교는 산술 표현식의 결과에 적용 가능</li><li>급여가 70000보다 큰 컴퓨터 공학과의 모든 강사 찾기 <ul><li><code>select name from instructor where dept_name = &#39;Comp. Sci.&#39; and salary &gt; 70000;</code></li></ul></li></ul><h2 id="the-from-clause" tabindex="-1"><a class="header-anchor" href="#the-from-clause"><span>The from Clause</span></a></h2><ul><li><code>from</code> 절은 질의에 관련된 관계를 나열</li><li>관계 대수의 카티전 프로덕트(Cartesian product) 연산에 해당</li><li><code>instructor</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">×</span></span></span></span> <code>teaches</code>의 카티전 프로덕트 찾기 <ul><li><code>select * from instructor, teaches;</code></li></ul></li><li>가능한 모든 <code>instructor-teaches</code> 쌍을 생성하며, 두 관계의 모든 속성을 포함</li><li>공통 속성(예: <code>ID</code>)의 경우, 결과 테이블의 속성은 관계 이름을 사용하여 이름이 변경됨 (예: <code>instructor.ID</code>)</li><li>카티전 프로덕트는 직접적으로는 그다지 유용하지 않지만, <code>where</code> 절 조건(관계 대수의 선택 연산)과 결합하면 유용</li></ul><h2 id="examples" tabindex="-1"><a class="header-anchor" href="#examples"><span>Examples</span></a></h2><ul><li>어떤 과목을 가르친 모든 강사의 이름과 <code>course_id</code> 찾기 <ul><li><code>select name, course_id from instructor, teaches where instructor.ID = teaches.ID;</code></li></ul></li><li>예술(Art) 학과에서 어떤 과목을 가르친 모든 강사의 이름과 <code>course_id</code> 찾기 <ul><li><code>select name, course_id from instructor, teaches where instructor.ID = teaches.ID and instructor.dept_name = &#39;Art&#39;;</code></li></ul></li><li>SQL은 중복을 허용함</li></ul><h2 id="the-rename-operation" tabindex="-1"><a class="header-anchor" href="#the-rename-operation"><span>The Rename Operation</span></a></h2><ul><li>SQL은 <code>as</code> 절을 사용하여 관계와 속성의 이름 변경을 허용: <ul><li><code>old-name as new-name</code></li></ul></li><li>만약 <code>new-name</code>이 속성이 아닌 관계를 위한 것이라면, &#39;상관 이름(correlation name)&#39;(SQL 표준), &#39;테이블 별칭(table alias)&#39;, &#39;상관 변수(correlation variable)&#39; 또는 &#39;튜플 변수(tuple variable)&#39;라고 불림</li><li>&#39;Comp. Sci.&#39;에 있는 어떤 강사보다 높은 급여를 받는 모든 강사의 이름 찾기: <ul><li><code>select distinct T.name from instructor as T, instructor as S where T.salary &gt; S.salary and S.dept_name = &#39;Comp. Sci.&#39;;</code></li></ul></li><li><code>as</code> 키워드는 선택 사항이며 생략 가능 (<code>instructor as T</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≡</span></span></span></span> <code>instructor T</code>)</li></ul><h2 id="string-operations" tabindex="-1"><a class="header-anchor" href="#string-operations"><span>String Operations</span></a></h2><ul><li>SQL은 문자열 비교를 위한 문자열 매칭 연산자 <code>like</code>를 포함하며, 두 개의 특수 문자를 사용한 패턴을 이용: <ul><li>퍼센트 (<code>%</code>): 모든 하위 문자열과 일치</li><li>밑줄 (<code>_</code>): 모든 단일 문자와 일치</li></ul></li><li>이름에 &quot;dar&quot; 하위 문자열을 포함하는 모든 강사의 이름 찾기 <ul><li><code>select name from instructor where name like &#39;%dar%&#39;;</code></li></ul></li><li>문자열 &quot;100%&quot;와 일치시키기 <ul><li><code>like &#39;100\\%&#39; escape &#39;\\&#39;</code></li><li>위 예시에서 백슬래시(<code>\\</code>)를 이스케이프 문자로 사용 (다른 어떤 문자도 이스케이프 문자로 사용 가능)</li></ul></li><li>패턴은 대소문자를 구분</li><li>패턴 매칭 예시: <ul><li><code>&#39;Intro%&#39;</code>: &quot;Intro&quot;로 시작하는 모든 문자열과 일치</li><li><code>&#39;%Comp%&#39;</code>: &quot;Comp&quot;를 하위 문자열로 포함하는 모든 문자열과 일치</li><li><code>&#39;_ _ _&#39;</code>: 정확히 세 문자로 된 모든 문자열과 일치</li><li><code>&#39;_ _ _ %&#39;</code>: 최소 세 문자로 된 모든 문자열과 일치</li></ul></li><li>SQL은 다양한 문자열 연산 지원 <ul><li>연결 (<code>||</code> 사용)</li><li>대소문자 변환</li><li>문자열 길이 찾기, 하위 문자열 추출 등</li></ul></li></ul><h2 id="ordering-the-display-of-tuples" tabindex="-1"><a class="header-anchor" href="#ordering-the-display-of-tuples"><span>Ordering the Display of Tuples</span></a></h2><ul><li>모든 강사의 이름을 알파벳 순으로 나열 <ul><li><code>select distinct name from instructor order by name;</code></li></ul></li><li>각 속성에 대해 내림차순은 <code>desc</code>, 오름차순은 <code>asc</code>를 명시 가능하며, 오름차순이 기본값 <ul><li>예시: <code>order by name desc</code></li></ul></li><li>여러 속성에 대해 정렬 가능 <ul><li>예시: <code>order by dept_name desc, name asc</code></li></ul></li></ul><h2 id="where-clause-predicates" tabindex="-1"><a class="header-anchor" href="#where-clause-predicates"><span>Where Clause Predicates</span></a></h2><ul><li>SQL은 <code>between</code> 비교 연산자를 포함</li><li>예시: 급여가 $90,000에서 $100,000 사이인 모든 강사의 이름 찾기 (즉, <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\\ge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≥</span></span></span></span> $90,000 이고 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mrel">≤</span></span></span></span> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>100</mn><mo separator="true">,</mo><mn>000</mn></mrow><annotation encoding="application/x-tex">100,000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">100</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">000</span></span></span></span>) <ul><li><code>select name from instructor where salary between 90000 and 100000;</code></li></ul></li><li>튜플 비교 <ul><li><code>select name, course_id from instructor, teaches where (instructor.ID, dept_name) = (teaches.ID, &#39;Biology&#39;);</code></li></ul></li><li>위는 아래와 동일 <ul><li><code>select name, course_id from instructor, teaches where instructor.ID = teaches.ID and dept_name = &#39;Biology&#39;;</code></li></ul></li></ul><h2 id="set-operations" tabindex="-1"><a class="header-anchor" href="#set-operations"><span>Set Operations</span></a></h2><ul><li>집합 연산 <code>union</code>, <code>intersect</code>, <code>except</code></li><li>각 연산은 자동으로 중복을 제거</li><li>모든 중복을 유지하려면 <code>union all</code> (또는 <code>intersect all</code> 혹은 <code>except all</code>) 사용</li><li>2017년 가을 또는 2018년 봄에 개설된 과목 찾기 <ul><li><code>(select course_id from section where sem = &#39;Fall&#39; and year = 2017) union (select course_id from section where sem = &#39;Spring&#39; and year = 2018);</code></li></ul></li><li>2017년 가을과 2018년 봄에 모두 개설된 과목 찾기 <ul><li><code>(select course_id from section where sem = &#39;Fall&#39; and year = 2017) intersect (select course_id from section where sem = &#39;Spring&#39; and year = 2018);</code></li></ul></li><li>2017년 가을에는 개설되었지만 2018년 봄에는 개설되지 않은 과목 찾기 <ul><li><code>(select course_id from section where sem = &#39;Fall&#39; and year = 2017) except (select course_id from section where sem = &#39;Spring&#39; and year = 2018);</code></li></ul></li></ul><h2 id="aggregate-functions" tabindex="-1"><a class="header-anchor" href="#aggregate-functions"><span>Aggregate Functions</span></a></h2><ul><li>이 함수들은 관계 내 값들의 컬렉션(집합 또는 다중 집합)에 대해 작동하며 단일 값을 반환 <ul><li><code>avg</code>: 평균값 (숫자 값에만 해당)</li><li><code>min</code>: 최솟값 (숫자 및 비숫자 값 모두 해당)</li><li><code>max</code>: 최댓값 (숫자 및 비숫자 값 모두 해당)</li><li><code>sum</code>: 값의 합계 (숫자 값에만 해당)</li><li><code>count</code>: 값의 개수 (숫자 및 비숫자 값 모두 해당)</li></ul></li><li>SQL에서 <code>count</code>를 제외한 집계 함수(aggregate functions)는 <code>null</code> 값을 무시</li><li><code>null</code> 값이 무시된 결과로 값들의 컬렉션이 비어 있을 수 있음</li><li>모든 집계 함수(<code>count</code> 제외)는 빈 컬렉션에 적용될 때 <code>null</code>을 반환 (빈 컬렉션의 <code>count</code>는 0으로 정의됨)</li><li><code>count</code> 함수는 다른 <code>non-null</code> 값처럼 모든 <code>null</code> 값을 계산</li></ul><h2 id="aggregate-functions-examples" tabindex="-1"><a class="header-anchor" href="#aggregate-functions-examples"><span>Aggregate Functions Examples</span></a></h2><ul><li>컴퓨터 과학 학과 강사들의 평균 급여 찾기 <ul><li><code>select avg(salary) from instructor where dept_name = &#39;Comp. Sci.&#39;;</code></li></ul></li><li>2018년 봄 학기에 과목을 가르치는 총 강사 수 찾기 <ul><li><code>select count(distinct ID) from teaches where semester = &#39;Spring&#39; and year = 2018;</code></li></ul></li><li><code>course</code> 관계의 튜플 수 찾기 <ul><li><code>select count(*) from course;</code></li></ul></li></ul><h2 id="aggregate-functions-–-group-by" tabindex="-1"><a class="header-anchor" href="#aggregate-functions-–-group-by"><span>Aggregate Functions – Group By</span></a></h2><ul><li><code>group by</code> 절을 사용하여 단일 튜플 집합이 아닌, 그룹화된 여러 튜플 집합에 개별적으로 집계 함수 적용 가능</li><li>각 학과의 강사 평균 급여 찾기 <ul><li><code>select dept_name, avg(salary) as avg_salary from instructor group by dept_name;</code></li></ul></li><li><code>group by</code> 절 사용 시, 각 그룹당 하나의 튜플만 출력됨</li></ul><h2 id="aggregation" tabindex="-1"><a class="header-anchor" href="#aggregation"><span>Aggregation</span></a></h2><ul><li>집계 함수 외의 <code>select</code> 절에 있는 속성들은 <code>group by</code> 목록에 나타나야 함 <ul><li><code>/* erroneous query */</code></li><li><code>select dept_name, ID, avg(salary) from instructor group by dept_name;</code></li></ul></li><li>특정 그룹(<code>dept_name</code>으로 정의됨)의 각 강사는 다른 ID를 가질 수 있지만, 각 그룹에 대해 하나의 튜플만 출력됨</li></ul><h2 id="aggregate-functions-–-having-clause" tabindex="-1"><a class="header-anchor" href="#aggregate-functions-–-having-clause"><span>Aggregate Functions – Having Clause</span></a></h2><ul><li><code>having</code> 절을 사용하여 출력될 각 그룹에 대한 조건 명시 가능</li><li><code>having</code> 절의 술어는 그룹 형성 후에 적용되는 반면, <code>where</code> 절의 술어는 그룹 형성 전에 적용됨</li><li>평균 급여가 42000보다 큰 모든 학과의 이름과 평균 급여 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> dept_name<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">as</span> avg_salary</span>
<span class="line"><span class="token keyword">from</span> instructor</span>
<span class="line"><span class="token keyword">group</span> <span class="token keyword">by</span> dept_name</span>
<span class="line"><span class="token keyword">having</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">42000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>평가 순서 <ol><li><code>from</code> 절이 먼저 평가됨</li><li><code>where</code> 절의 술어(존재 시)가 <code>from</code> 절의 결과에 적용됨</li><li><code>where</code> 술어를 만족하는 튜플들이 <code>group by</code> 절에 의해 그룹으로 배치됨</li><li><code>having</code> 절(존재 시)이 각 그룹에 적용됨; <code>having</code> 절 술어를 만족하지 않는 그룹들은 제거됨</li><li><code>select</code> 절은 남은 그룹들을 사용하여, 집계 함수(존재 시)를 적용한 후 각 그룹에 대한 단일 결과 튜플을 얻음</li></ol></li></ul><h2 id="nested-subqueries" tabindex="-1"><a class="header-anchor" href="#nested-subqueries"><span>Nested Subqueries</span></a></h2><ul><li>SQL은 서브쿼리(subquery)의 중첩 메커니즘 제공</li><li>서브쿼리는 다른 쿼리 내에 중첩된 <code>select-from-where</code> 표현식</li><li>중첩은 다음 SQL 쿼리에서 수행될 수 있음: <code>select A1, A2, ..., An from r1, r2, ..., rm where P</code></li><li>다음과 같이: <ul><li><code>from</code> 절: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">r_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>는 유효한 서브쿼리로 대체 가능</li><li><code>where</code> 절: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>는 <code>B &lt;operation&gt; (subquery)</code> 형태의 표현식으로 대체 가능. 여기서 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>는 속성</li><li><code>select</code> 절: <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">A_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>는 단일 값을 생성하는 서브쿼리(스칼라 서브쿼리, scalar subquery)로 대체 가능</li></ul></li></ul><h2 id="nested-subqueries-set-membership" tabindex="-1"><a class="header-anchor" href="#nested-subqueries-set-membership"><span>Nested Subqueries: Set Membership</span></a></h2><ul><li>2017년 가을과 2018년 봄에 제공된 과목 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> <span class="token keyword">distinct</span> course_id</span>
<span class="line"><span class="token keyword">from</span> section</span>
<span class="line"><span class="token keyword">where</span> semester <span class="token operator">=</span> <span class="token string">&#39;Fall&#39;</span> <span class="token operator">and</span> <span class="token keyword">year</span> <span class="token operator">=</span> <span class="token number">2017</span> <span class="token operator">and</span></span>
<span class="line">      course_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> course_id</span>
<span class="line">                    <span class="token keyword">from</span> section</span>
<span class="line">                    <span class="token keyword">where</span> semester <span class="token operator">=</span> <span class="token string">&#39;Spring&#39;</span> <span class="token operator">and</span> <span class="token keyword">year</span> <span class="token operator">=</span> <span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>2017년 가을에는 제공되었지만 2018년 봄에는 제공되지 않은 과목 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> <span class="token keyword">distinct</span> course_id</span>
<span class="line"><span class="token keyword">from</span> section</span>
<span class="line"><span class="token keyword">where</span> semester <span class="token operator">=</span> <span class="token string">&#39;Fall&#39;</span> <span class="token operator">and</span> <span class="token keyword">year</span> <span class="token operator">=</span> <span class="token number">2017</span> <span class="token operator">and</span></span>
<span class="line">      course_id <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> course_id</span>
<span class="line">                        <span class="token keyword">from</span> section</span>
<span class="line">                        <span class="token keyword">where</span> semester <span class="token operator">=</span> <span class="token string">&#39;Spring&#39;</span> <span class="token operator">and</span> <span class="token keyword">year</span> <span class="token operator">=</span> <span class="token number">2018</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>이름이 &quot;Mozart&quot;도 &quot;Einstein&quot;도 아닌 모든 강사 이름 지정 <ul><li><code>select distinct name from instructor where name not in (&#39;Mozart&#39;, &#39;Einstein&#39;);</code></li></ul></li><li>ID가 10101인 강사가 가르친 과목 섹션을 수강한 (고유한) 학생들의 총 수 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">distinct</span> ID<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">from</span> takes</span>
<span class="line"><span class="token keyword">where</span> <span class="token punctuation">(</span>course_id<span class="token punctuation">,</span> sec_id<span class="token punctuation">,</span> semester<span class="token punctuation">,</span> <span class="token keyword">year</span><span class="token punctuation">)</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token keyword">select</span> course_id<span class="token punctuation">,</span> sec_id<span class="token punctuation">,</span> semester<span class="token punctuation">,</span> <span class="token keyword">year</span></span>
<span class="line">                                              <span class="token keyword">from</span> teaches</span>
<span class="line">                                              <span class="token keyword">where</span> teaches<span class="token punctuation">.</span>ID <span class="token operator">=</span> <span class="token string">&#39;10101&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>참고: 위 쿼리는 훨씬 간단한 방식으로 작성 가능하며, 위 공식은 SQL 기능 설명 목적임</li></ul></li></ul><h2 id="nested-subqueries-set-comparison-some" tabindex="-1"><a class="header-anchor" href="#nested-subqueries-set-comparison-some"><span>Nested Subqueries: Set comparison (“some”)</span></a></h2><ul><li>생물학(Biology) 학과에 있는 어떤 (적어도 한 명의) 강사보다 급여가 높은 강사들의 이름 찾기 <ul><li><code>select distinct T.name from instructor as T, instructor as S where T.salary &gt; S.salary and S.dept_name = &#39;Biology&#39;;</code></li></ul></li><li><code>some</code> 절을 사용한 동일한 쿼리 <ul><li><code>select name from instructor where salary &gt; some (select salary from instructor where dept_name = &#39;Biology&#39;);</code></li></ul></li></ul><h2 id="definition-of-some-clause" tabindex="-1"><a class="header-anchor" href="#definition-of-some-clause"><span>Definition of “some” Clause</span></a></h2><ul><li><code>F &lt;comp&gt; some r</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mi mathvariant="normal">∃</mi><mi>t</mi><mo>∈</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">\\Leftrightarrow \\exists t \\in r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord">∃</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> بحيث أن <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>F</mi><mo>&lt;</mo><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mo>&gt;</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(F &lt;comp&gt; t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></li><li>여기서 <code>&lt;comp&gt;</code>는 <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>=</code>, <code>!=</code>가 될 수 있음</li><li><code> (5 &lt; some {0, 5, 6})</code> = <code>true</code></li><li><code> (5 &lt; some {0, 5, 0})</code> = <code>false</code></li><li><code> (5 = some {0, 5, 0})</code> = <code>true</code></li><li><code> (5 != some {0, 5, 5})</code> = <code>true</code> (∵ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo mathvariant="normal">≠</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">0 \\ne 5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span>)</li><li><code>(= some)</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≡</span></span></span></span> <code>in</code></li><li><code>(!= some)</code>은 <code>not in</code>과 동치가 아님</li></ul><h2 id="nested-subqueries-set-comparison-all" tabindex="-1"><a class="header-anchor" href="#nested-subqueries-set-comparison-all"><span>Nested Subqueries: Set comparison (“all”)</span></a></h2><ul><li>생물학 학과의 모든 강사의 급여보다 더 많은 급여를 받는 모든 강사의 이름 찾기 <ul><li><code>select name from instructor where salary &gt; all (select salary from instructor where dept_name = &#39;Biology&#39;);</code></li></ul></li></ul><h2 id="definition-of-all-clause" tabindex="-1"><a class="header-anchor" href="#definition-of-all-clause"><span>Definition of “all” Clause</span></a></h2><ul><li><code>F &lt;comp&gt; all r</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mi mathvariant="normal">∀</mi><mi>t</mi><mo>∈</mo><mi>r</mi><mo stretchy="false">(</mo><mi>F</mi><mo>&lt;</mo><mi>c</mi><mi>o</mi><mi>m</mi><mi>p</mi><mo>&gt;</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\Leftrightarrow \\forall t \\in r (F &lt;comp&gt; t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">co</span><span class="mord mathnormal">m</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span></li><li><code> (5 &lt; all {0, 5, 6})</code> = <code>false</code></li><li><code> (5 &lt; all {6, 10, 4})</code> = <code>false</code></li><li><code> (5 = all {4, 5, 6})</code> = <code>false</code></li><li><code> (5 != all {4, 6})</code> = <code>true</code> (∵ <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo mathvariant="normal">≠</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">5 \\ne 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">4</span></span></span></span> 이고 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>5</mn><mo mathvariant="normal">≠</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">5 \\ne 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span></span></span></span>)</li><li><code>(= all)</code>은 <code>in</code>과 동치가 아님</li><li><code>(!= all)</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4637em;"></span><span class="mrel">≡</span></span></span></span> <code>not in</code></li></ul><h2 id="nested-subqueries-test-for-empty-relations" tabindex="-1"><a class="header-anchor" href="#nested-subqueries-test-for-empty-relations"><span>Nested Subqueries: Test for Empty Relations</span></a></h2><ul><li><code>exists</code> 구문은 인수 서브쿼리가 비어 있지 않으면 <code>true</code>를 반환</li><li><code>exists r</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mi>r</mi><mo mathvariant="normal">≠</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\\Leftrightarrow r \\ne \\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></li><li><code>not exists r</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo><mi>r</mi><mo>=</mo><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\\Leftrightarrow r = \\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3669em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span></span></span></span></li><li>&quot;2017년 가을 학기와 2018년 봄 학기 모두에 가르친 모든 과목 찾기&quot; 쿼리를 지정하는 또 다른 방법<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> course_id</span>
<span class="line"><span class="token keyword">from</span> section <span class="token keyword">as</span> S</span>
<span class="line"><span class="token keyword">where</span> semester <span class="token operator">=</span> <span class="token string">&#39;Fall&#39;</span> <span class="token operator">and</span> <span class="token keyword">year</span> <span class="token operator">=</span> <span class="token number">2017</span> <span class="token operator">and</span></span>
<span class="line">      <span class="token keyword">exists</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span></span>
<span class="line">              <span class="token keyword">from</span> section <span class="token keyword">as</span> T</span>
<span class="line">              <span class="token keyword">where</span> semester <span class="token operator">=</span> <span class="token string">&#39;Spring&#39;</span> <span class="token operator">and</span> <span class="token keyword">year</span> <span class="token operator">=</span> <span class="token number">2018</span> <span class="token operator">and</span></span>
<span class="line">                    S<span class="token punctuation">.</span>course_id <span class="token operator">=</span> T<span class="token punctuation">.</span>course_id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>SQL에서, 외부 쿼리의 상관 이름(변수 <code>S</code>)은 <code>where</code> 절의 서브쿼리에서 사용될 수 있음</li><li>외부 쿼리의 상관 이름을 사용하는 서브쿼리를 상관 서브쿼리(correlated subquery)라고 함</li></ul><h2 id="use-of-not-exists-clause" tabindex="-1"><a class="header-anchor" href="#use-of-not-exists-clause"><span>Use of “not exists” Clause</span></a></h2><ul><li>생물학 학과에서 제공하는 모든 과목을 수강한 모든 학생 찾기</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>−</mo><mi>Y</mi><mo>=</mo><mi mathvariant="normal">∅</mi><mo>⇔</mo><mi>X</mi><mo>⊆</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X - Y = \\emptyset \\Leftrightarrow X \\subseteq Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">∅</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇔</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span> 참고<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> <span class="token keyword">distinct</span> S<span class="token punctuation">.</span>ID<span class="token punctuation">,</span> S<span class="token punctuation">.</span>name</span>
<span class="line"><span class="token keyword">from</span> student <span class="token keyword">as</span> S</span>
<span class="line"><span class="token keyword">where</span> <span class="token operator">not</span> <span class="token keyword">exists</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token keyword">select</span> course_id</span>
<span class="line">                    <span class="token keyword">from</span> course</span>
<span class="line">                    <span class="token keyword">where</span> dept_name <span class="token operator">=</span> <span class="token string">&#39;Biology&#39;</span><span class="token punctuation">)</span></span>
<span class="line">                   <span class="token keyword">except</span></span>
<span class="line">                   <span class="token punctuation">(</span><span class="token keyword">select</span> T<span class="token punctuation">.</span>course_id</span>
<span class="line">                    <span class="token keyword">from</span> takes <span class="token keyword">as</span> T</span>
<span class="line">                    <span class="token keyword">where</span> S<span class="token punctuation">.</span>ID <span class="token operator">=</span> T<span class="token punctuation">.</span>ID<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>첫 번째 중첩 쿼리는 생물학에서 제공하는 모든 과목을 나열</li><li>두 번째 중첩 쿼리는 특정 학생이 수강한 모든 과목을 나열</li></ul><h2 id="nested-subqueries-test-for-absence-of-duplicate-tuples" tabindex="-1"><a class="header-anchor" href="#nested-subqueries-test-for-absence-of-duplicate-tuples"><span>Nested Subqueries: Test for Absence of Duplicate Tuples</span></a></h2><ul><li><code>unique</code> 구문은 서브쿼리 결과에 중복 튜플이 있는지 테스트</li><li>주어진 서브쿼리에 중복이 없으면 <code>true</code>로 평가됨</li><li>2017년에 최대 한 번 제공된 모든 과목 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> T<span class="token punctuation">.</span>course_id</span>
<span class="line"><span class="token keyword">from</span> course <span class="token keyword">as</span> T</span>
<span class="line"><span class="token keyword">where</span> <span class="token keyword">unique</span> <span class="token punctuation">(</span><span class="token keyword">select</span> R<span class="token punctuation">.</span>course_id</span>
<span class="line">              <span class="token keyword">from</span> section <span class="token keyword">as</span> R</span>
<span class="line">              <span class="token keyword">where</span> T<span class="token punctuation">.</span>course_id <span class="token operator">=</span> R<span class="token punctuation">.</span>course_id <span class="token operator">and</span> R<span class="token punctuation">.</span><span class="token keyword">year</span> <span class="token operator">=</span> <span class="token number">2017</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="subqueries-in-the-from-clause" tabindex="-1"><a class="header-anchor" href="#subqueries-in-the-from-clause"><span>Subqueries in the ‘from’ Clause</span></a></h2><ul><li>SQL은 <code>from</code> 절에서 서브쿼리 표현식을 사용하도록 허용</li><li>평균 급여가 $42,000 이상인 학과들의 강사 평균 급여 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> dept_name<span class="token punctuation">,</span> avg_salary</span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> dept_name<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">as</span> avg_salary</span>
<span class="line">      <span class="token keyword">from</span> instructor</span>
<span class="line">      <span class="token keyword">group</span> <span class="token keyword">by</span> dept_name<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">where</span> avg_salary <span class="token operator">&gt;</span> <span class="token number">42000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>having</code> 절을 사용할 필요가 없다는 점에 유의</li><li>위 쿼리를 작성하는 또 다른 방법<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> dept_name<span class="token punctuation">,</span> avg_salary</span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> dept_name<span class="token punctuation">,</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">from</span> instructor</span>
<span class="line">      <span class="token keyword">group</span> <span class="token keyword">by</span> dept_name<span class="token punctuation">)</span></span>
<span class="line">      <span class="token keyword">as</span> dept_avg<span class="token punctuation">(</span>dept_name<span class="token punctuation">,</span> avg_salary<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">where</span> avg_salary <span class="token operator">&gt;</span> <span class="token number">42000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="nested-subqueries-with-clause" tabindex="-1"><a class="header-anchor" href="#nested-subqueries-with-clause"><span>Nested Subqueries: ‘With’ Clause</span></a></h2><ul><li><code>with</code> 절은 <code>with</code> 절이 발생하는 쿼리에서만 정의가 사용 가능한 임시 관계(임시 뷰)를 정의하는 방법 제공</li><li>평균 예산보다 더 큰 예산을 가진 모든 학과 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">with</span> avg_budget<span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span> <span class="token keyword">as</span></span>
<span class="line">    <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>budget<span class="token punctuation">)</span> <span class="token keyword">from</span> department<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">select</span> department<span class="token punctuation">.</span>name</span>
<span class="line"><span class="token keyword">from</span> department<span class="token punctuation">,</span> avg_budget</span>
<span class="line"><span class="token keyword">where</span> department<span class="token punctuation">.</span>budget <span class="token operator">&gt;</span> avg_budget<span class="token punctuation">.</span><span class="token keyword">value</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="complex-queries-using-with-clause" tabindex="-1"><a class="header-anchor" href="#complex-queries-using-with-clause"><span>Complex Queries using ‘With’ Clause</span></a></h2><ul><li>총 급여가 모든 학과의 총 급여 평균보다 큰 모든 학과 찾기<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">with</span> dept_total <span class="token punctuation">(</span>dept_name<span class="token punctuation">,</span> <span class="token keyword">value</span><span class="token punctuation">)</span> <span class="token keyword">as</span></span>
<span class="line">    <span class="token punctuation">(</span><span class="token keyword">select</span> dept_name<span class="token punctuation">,</span> <span class="token function">sum</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span></span>
<span class="line">     <span class="token keyword">from</span> instructor</span>
<span class="line">     <span class="token keyword">group</span> <span class="token keyword">by</span> dept_name<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">dept_total_avg<span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span> <span class="token keyword">as</span></span>
<span class="line">    <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span><span class="token keyword">value</span><span class="token punctuation">)</span></span>
<span class="line">     <span class="token keyword">from</span> dept_total<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">select</span> dept_name</span>
<span class="line"><span class="token keyword">from</span> dept_total<span class="token punctuation">,</span> dept_total_avg</span>
<span class="line"><span class="token keyword">where</span> dept_total<span class="token punctuation">.</span><span class="token keyword">value</span> <span class="token operator">&gt;</span> dept_total_avg<span class="token punctuation">.</span><span class="token keyword">value</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="nested-subqueries-scalar-subquery" tabindex="-1"><a class="header-anchor" href="#nested-subqueries-scalar-subquery"><span>Nested Subqueries: Scalar Subquery</span></a></h2><ul><li>스칼라 서브쿼리는 단일 값이 예상되는 곳에 사용되는 서브쿼리</li><li>스칼라 서브쿼리는 외부 쿼리의 <code>select</code> 절에서 사용될 수 있음</li><li>각 학과의 강사 수와 함께 모든 학과 나열<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">select</span> dept_name<span class="token punctuation">,</span></span>
<span class="line">       <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">from</span> instructor</span>
<span class="line">        <span class="token keyword">where</span> department<span class="token punctuation">.</span>dept_name <span class="token operator">=</span> instructor<span class="token punctuation">.</span>dept_name<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">as</span> num_instructors</span>
<span class="line"><span class="token keyword">from</span> department<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>서브쿼리가 하나 이상의 결과 튜플을 반환하면 런타임 오류 발생</li></ul><h2 id="null-values" tabindex="-1"><a class="header-anchor" href="#null-values"><span>Null Values</span></a></h2><ul><li>튜플이 일부 속성에 대해 <code>null</code>로 표시되는 <code>null</code> 값을 가질 수 있음</li><li><code>null</code>은 알 수 없는 값이거나 값이 존재하지 않음을 의미</li><li><code>null</code>을 포함하는 모든 산술 표현식의 결과는 <code>null</code></li><li>집계 함수는 <code>null</code> 값을 무시</li><li>중복 제거 및 그룹화의 경우, <code>null</code>은 다른 값처럼 취급되며, 두 <code>null</code>은 동일한 것으로 간주됨</li><li><code>is null</code> 술어는 <code>null</code> 값을 확인하는 데 사용될 수 있음</li><li>예시: 급여가 <code>null</code>인 모든 강사 찾기 <ul><li><code>select name from instructor where salary is null;</code></li></ul></li><li><code>is not null</code> 술어는 적용된 값이 <code>null</code>이 아닌 경우 성공</li><li>SQL은 <code>null</code> 값을 포함하는 비교의 결과를 <code>unknown</code>으로 처리 (<code>is null</code> 및 <code>is not null</code> 술어 제외)</li><li>예시: <code>5 &lt; null</code> 또는 <code>null &lt;&gt; null</code> 또는 <code>null = null</code></li><li><code>where</code> 절의 술어는 불리언(boolean) 연산(<code>and</code>, <code>or</code>, <code>not</code>)을 포함할 수 있으므로, <code>unknown</code> 값을 처리하기 위해 불리언 연산의 정의를 확장해야 함 <ul><li><code>and</code>: <code>(true and unknown)</code> = <code>unknown</code>, <code>(false and unknown)</code> = <code>false</code>, <code>(unknown and unknown)</code> = <code>unknown</code></li><li><code>or</code>: <code>(unknown or true)</code> = <code>true</code>, <code>(unknown or false)</code> = <code>unknown</code>, <code>(unknown or unknown)</code> = <code>unknown</code></li><li><code>not</code>: <code>(not unknown)</code> = <code>unknown</code></li></ul></li><li>SQL에서 <code>P is unknown</code>은 술어 <code>P</code>가 <code>unknown</code>으로 평가되면 <code>true</code>로 평가됨</li><li><code>where</code> 절 술어의 결과는 <code>unknown</code>으로 평가되면 <code>false</code>로 처리됨</li></ul><h2 id="modification-of-the-database" tabindex="-1"><a class="header-anchor" href="#modification-of-the-database"><span>Modification of the Database</span></a></h2><ul><li>주어진 관계에서 튜플 삭제</li><li>주어진 관계에 새 튜플 삽입</li><li>주어진 관계의 일부 튜플 값 업데이트</li></ul><h2 id="deletion" tabindex="-1"><a class="header-anchor" href="#deletion"><span>Deletion</span></a></h2><ul><li>모든 강사 삭제 <ul><li><code>delete from instructor;</code></li></ul></li><li>재무(Finance) 학과의 모든 강사 삭제 <ul><li><code>delete from instructor where dept_name = &#39;Finance&#39;;</code></li></ul></li><li><code>&#39;ITBT&#39;</code> 건물에 위치한 학과와 관련된 <code>instructor</code> 관계의 모든 튜플 삭제 <ul><li><code>delete from instructor where dept_name in (select dept_name from department where building = &#39;ITBT&#39;);</code></li></ul></li><li>급여가 강사 평균 급여보다 적은 모든 강사 삭제 <ul><li>문제점: <code>instructor</code>에서 튜플을 삭제함에 따라 평균 급여가 변경됨</li><li>SQL의 해결책: <ol><li>먼저 <code>avg(salary)</code>를 계산하고 삭제할 모든 튜플을 찾음</li><li>위에서 찾은 모든 튜플을 삭제 (평균을 재계산하거나 튜플을 다시 테스트하지 않음)</li></ol></li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">delete</span> <span class="token keyword">from</span> instructor</span>
<span class="line"><span class="token keyword">where</span> salary <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> instructor<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="insertion" tabindex="-1"><a class="header-anchor" href="#insertion"><span>Insertion</span></a></h2><ul><li><code>course</code>에 새 튜플 추가 <ul><li><code>insert into course values (&#39;CS-437&#39;, &#39;Database Systems&#39;, &#39;Comp. Sci.&#39;, 4);</code></li></ul></li><li>또는 동등하게 <ul><li><code>insert into course (course_id, title, dept_name, credits) values (&#39;CS-437&#39;, &#39;Database Systems&#39;, &#39;Comp. Sci.&#39;, 4);</code></li></ul></li><li><code>tot_creds</code>가 <code>null</code>로 설정된 새 튜플을 <code>student</code>에 추가 <ul><li><code>insert into student values (&#39;3003&#39;, &#39;Green&#39;, &#39;Finance&#39;, null);</code></li></ul></li><li>144 학점 이상을 이수한 음악(Music) 학과의 각 학생을 급여 $18,000의 음악 학과 강사로 만듦 <ul><li><code>insert into instructor select ID, name, dept_name, 18000 from student where dept_name = &#39;Music&#39; and total_cred &gt; 144;</code></li></ul></li><li><code>student</code> 관계의 스키마: <code>(ID, name, dept_name, tot_cred)</code></li><li><code>instructor</code> 관계의 스키마: <code>(ID, name, dept_name, salary)</code></li><li><code>select from where</code> 문은 그 결과 중 어떤 것이라도 관계에 삽입되기 전에 완전히 평가됨</li></ul><h2 id="updates" tabindex="-1"><a class="header-anchor" href="#updates"><span>Updates</span></a></h2><ul><li>모든 강사에게 5% 급여 인상 <ul><li><code>update instructor set salary = salary * 1.05;</code></li></ul></li><li>70000 미만을 버는 강사에게 5% 급여 인상 <ul><li><code>update instructor set salary = salary * 1.05 where salary &lt; 70000;</code></li></ul></li><li>평균보다 급여가 적은 강사에게 5% 급여 인상 <ul><li><code>update instructor set salary = salary * 1.05 where salary &lt; (select avg(salary) from instructor);</code></li></ul></li><li>급여가 $100,000 이상인 강사의 급여를 3% 인상하고, 나머지는 5% 인상</li><li>두 개의 <code>update</code> 문 작성 (순서가 중요함):<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">update</span> instructor <span class="token keyword">set</span> salary <span class="token operator">=</span> salary <span class="token operator">*</span> <span class="token number">1.03</span> <span class="token keyword">where</span> salary <span class="token operator">&gt;</span> <span class="token number">100000</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">update</span> instructor <span class="token keyword">set</span> salary <span class="token operator">=</span> salary <span class="token operator">*</span> <span class="token number">1.05</span> <span class="token keyword">where</span> salary <span class="token operator">&lt;=</span> <span class="token number">100000</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><code>case</code> 문을 사용한 더 나은 방법:<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code class="language-sql"><span class="line"><span class="token keyword">update</span> instructor</span>
<span class="line"><span class="token keyword">set</span> salary <span class="token operator">=</span> <span class="token keyword">case</span></span>
<span class="line">                <span class="token keyword">when</span> salary <span class="token operator">&lt;=</span> <span class="token number">100000</span> <span class="token keyword">then</span> salary <span class="token operator">*</span> <span class="token number">1.05</span></span>
<span class="line">                <span class="token keyword">else</span> salary <span class="token operator">*</span> <span class="token number">1.03</span></span>
<span class="line">             <span class="token keyword">end</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,79)])])}const o=a(t,[["render",i]]),r=JSON.parse('{"path":"/db/3.SQL-1.html","title":"3. SQL","lang":"ko-KR","frontmatter":{},"git":{"updatedTime":1760649704000,"contributors":[{"name":"kmbzn","username":"kmbzn","email":"kmbzn24@gmail.com","commits":1,"url":"https://github.com/kmbzn"}],"changelog":[{"hash":"9ad86bdf5294b4a8d497bfdc0647917dfd3d3bfa","time":1760649704000,"email":"kmbzn24@gmail.com","author":"kmbzn","message":"Add comprehensive documentation on relational database design, covering functional dependency theory, closure of functional dependencies, canonical cover, and normalization processes including BCNF and 3NF decomposition algorithms."}]},"filePathRelative":"db/3.SQL-1.md"}');export{o as comp,r as data};
